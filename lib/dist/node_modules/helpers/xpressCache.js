// Generated by CoffeeScript 2.2.3
var cache, logger, mcache;

mcache = require("memory-cache");

logger = console;

cache = {
  hit: function(req, res, next) {
    var cachedBody, key;
    key = '__express__' + req.originalUrl || req.url;
    cachedBody = mcache.get(key);
    if (cachedBody) {
      console.log(`ok returning _cached value for ${key}`);
      res.send(cachedBody);
      return;
    } else {
      console.log(`ok no _cached value for ${key}, will process`);
      next();
    }
  },
  store: function(duration) {
    return function(req, res, next) {
      var cachedBody, key;
      key = '__express__' + req.originalUrl || req.url;
      cachedBody = mcache.get(key);
      if (cachedBody) {
        //logger.debug "OK responding with cached entry from '#{key}'"
        res.send(cachedBody);
        return;
      } else {
        res.sendResponse = res.send;
        res.send = function(body) {
          //logger.debug "OK storing cached value for '#{key}'"
          mcache.put(key, body, duration * 1000);
          res.sendResponse(body);
        };
        //logger.debug "OK no cache entry for '#{key}', will process"
        next();
      }
    };
  },
  cache: function(duration) {
    return function(req, res, next) {
      var cachedBody, key;
      key = '__express__' + req.originalUrl || req.url;
      cachedBody = mcache.get(key);
      if (cachedBody) {
        console.log(`ok returning _cached value for ${key}`);
        res.send(cachedBody);
        return;
      } else {
        res.sendResponse = res.send;
        res.send = function(body) {
          console.log(`OK storing _cached value for '${key}'`);
          mcache.put(key, body, duration * 1000);
          res.sendResponse(body);
        };
        console.log(`ok no _cached value for ${key}, will process\n\nsend=${res.send}`);
        next();
      }
    };
  }
};

module.exports = cache.cache;
