// Generated by CoffeeScript 1.7.1
var MongoDoc, Seq, app, express, logger, modules, xplore, xpressBodyParser, xpressCompress, xpressJade, xpressLogger, xpressStatic, _;

modules = require('modules');

express = require('express');

MongoDoc = require('macmodel');

Seq = require('seq');

_ = require('underscore');

xpressLogger = require('morgan');

xpressBodyParser = require('body-parser');

xpressJade = require('jade');

xpressCompress = require('compression');

xpressStatic = require('serve-static');

logger = console;

app = express();

app.set('view engine', 'jade');

app.set('views', "" + __dirname + "/../../views");

app.set('view options', {
  layout: true,
  pretty: true
});

app.use(xpressCompress()).use('/assets', xpressStatic("" + __dirname + "/../../static/dist")).use(xpressLogger()).use(xpressBodyParser());

xplore = {
  setLogger: function(l) {
    return logger = l;
  },
  start: function(mongoConfig, port, fn) {
    var handlers;
    handlers = require('handlers');
    if (mongoConfig.databases === void 0) {
      mongoConfig.databases = {};
    }
    mongoConfig.databases.xplore = {
      "report": []
    };
    return Seq().seq(function() {
      return MongoDoc.db.initialize(mongoConfig, logger, this);
    }).seq(function() {
      logger.log("MongoDoc.db.report " + MongoDoc.db.report + ", " + MongoDoc.db.databases.xplore.report);
      handlers.main(app);
      app.listen(port);
      logger.log("Xplore server listening on port " + port);
      return typeof fn === "function" ? fn(null) : void 0;
    })["catch"](function(boo) {
      logger.error(boo);
      return typeof fn === "function" ? fn(boo) : void 0;
    });
  }
};

module.exports = xplore;
